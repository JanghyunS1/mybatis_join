<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
		
		
	 <!--  annotation 기반으로 Controller 셋팅 : com.springboo.biz 하위의 모든 클래스에서 @(어노테이션) 을 스캔 가능하도록-->
	 
	 <context:component-scan base-package="com.springbook.biz" ></context:component-scan>
	 
	 <!-- @ControllerAdvice 와 @ExceptionHandler 어노테이션을 게더링 하기 위한 설정 -->
	<mvc:annotation-driven> </mvc:annotation-driven>

	<!--  MultipartResolver 설정 : 파일 업로드 빈을 셋팅 : << 주의 : 빈이름을 임의로 변경하면 안됨. >> -->

		<bean id = "multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name = "maxUploadSize" value="10000000"> </property>
 		</bean>
 		

	
	<!-- DataSource 설정 
	DB 연동할때 사용, JDBCTemplate, mybatis, JPA 연동시 사용 -->
	<context:property-placeholder location="classpath:config/oracle.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Mybatis 설정 : SQL SessionFactory 생성 , DB 연결 설정까지 구성됨-->
	<bean id="sessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sql-map-config.xml" />
	
	</bean>


<!--  Spring과 MyBatis 연동 설정 -->
	<!-- Mybatis 설정 : SQL SessionFactory 생성 , DB 연결 설정까지 구성됨-->
	<bean id="sqlSession" class = "org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sql-map-config.xml" />
	
	</bean>

<!--  SqlSessionTemplate 생성 -->
<bean class = "org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg ref="sqlSession"></constructor-arg>
</bean>

</beans>


